name: Server Build and Run

on:
  push:
    branches:
      - master

jobs:
  copy_source_code_to_server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test secrets
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          echo Testing secrets
          echo "$SERVER_HOST"
          echo ${#SERVER_HOST}
          echo ${SERVER_HOST}
      - name: Copy code to server using SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "." 
          target: "~/active"
          args: -r

  clean_and_rerun_containers:
    runs-on: ubuntu-latest
    needs: copy_source_code_to_server
  
    steps:
      - name: Clean and rerun the containers
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
      - name: Set up environment variables
        run: |
          export API_SERVER_PORT="${{ secrets.API_SERVER_PORT }}"
          export MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}"
          export MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}"
          export MYSQL_PORT="${{ secrets.MYSQL_PORT }}"
          export MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}"
          export MYSQL_USER="${{ secrets.MYSQL_USER }}"
          export TIME_ZONE="${{ secrets.TIME_ZONE }}"
      - name: Clean and rerun the containers
        run: |
          docker stop ${{ secrets.API_SERVER_CONTAINER_NAME }}
          docker stop ${{ secrets.SCRAPER_CONTAINER_NAME }}
  
          docker rm ${{ secrets.API_SERVER_CONTAINER_NAME }}
          docker rm ${{ secrets.SCRAPER_CONTAINER_NAME }}
  
          cd ~/active
          
          docker-compose up -d
