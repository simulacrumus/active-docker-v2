name: Server Build and Run

on:
  push:
    branches:
      - master

jobs:
  copy_source_code_to_server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Connect to server and copy source code
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "." 
          target: "~/active"

  clean_and_rerun_containers:
    runs-on: ubuntu-latest
    needs: copy_source_code_to_server
  
    steps:
      - name: Connect to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
           if docker ps -a --format '{{.Names}}' | grep -qF ${API_SERVER_CONTAINER_NAME}; then
            docker stop ${API_SERVER_CONTAINER_NAME}
            docker rm ${API_SERVER_CONTAINER_NAME}
           fi
            
           if docker ps -a --format '{{.Names}}' | grep -qF ${SCRAPER_CONTAINER_NAME}; then
            docker stop ${SCRAPER_CONTAINER_NAME}
            docker rm ${SCRAPER_CONTAINER_NAME}
           fi
           
           # docker stop ${{ secrets.API_SERVER_CONTAINER_NAME }}
           # docker stop ${{ secrets.SCRAPER_CONTAINER_NAME }}

           # docker rm ${{ secrets.API_SERVER_CONTAINER_NAME }}
           # docker rm ${{ secrets.SCRAPER_CONTAINER_NAME }}

           cd ~/active
           docker compose up -d
           
        env:
          API_SERVER_PORT: ${{ secrets.API_SERVER_PORT }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          TIME_ZONE: ${{ secrets.TIME_ZONE }}
          
